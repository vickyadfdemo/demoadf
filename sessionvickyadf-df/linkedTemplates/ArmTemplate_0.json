{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sessionvickyadf-df"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"lnk_sql_table1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnk_sql_table1'"
		},
		"lnk_sql_table2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'lnk_sql_table2'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "vickyadf-df.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adfsessiondemo"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vickyadf-df"
		},
		"lnk_sql_table1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "vickyadf-df.database.windows.net"
		},
		"lnk_sql_table1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().databasename}"
		},
		"lnk_sql_table1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vickyadf-df"
		},
		"lnk_sql_table2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "vickyadf-df.database.windows.net"
		},
		"lnk_sql_table2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().databasename}"
		},
		"lnk_sql_table2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vickyadf-df"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_sql_table1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databasename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lnk_sql_table1_properties_typeProperties_server')]",
					"database": "[parameters('lnk_sql_table1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('lnk_sql_table1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnk_sql_table1_password')]"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lnk_sql_table2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databasename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('lnk_sql_table2_properties_typeProperties_server')]",
					"database": "[parameters('lnk_sql_table2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('lnk_sql_table2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('lnk_sql_table2_password')]"
					},
					"alwaysEncryptedSettings": {
						"alwaysEncryptedAkvAuthType": "ManagedIdentity"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('JoinOuput','_','2024-11-27')",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Dept_ID",
						"type": "String"
					},
					{
						"name": "Std_in_Dept",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_filteroutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "String"
					},
					{
						"name": "Emp_Name",
						"type": "String"
					},
					{
						"name": "Emp_Salary",
						"type": "String"
					},
					{
						"name": "Emp_Manager",
						"type": "String"
					},
					{
						"name": "Dept_ID",
						"type": "String"
					},
					{
						"name": "Dept_ID ",
						"type": "String"
					},
					{
						"name": "Dept_Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'_',formatDateTime(utcNow(),'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "UTF8"
					},
					{
						"name": "Emp_Name",
						"type": "UTF8"
					},
					{
						"name": "Emp_Salary",
						"type": "UTF8"
					},
					{
						"name": "Emp_Manager",
						"type": "UTF8"
					},
					{
						"name": "Dept_ID",
						"type": "UTF8"
					},
					{
						"name": "Dept_Name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_software')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "softwareoutput",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "String"
					},
					{
						"name": "Emp_Name",
						"type": "String"
					},
					{
						"name": "Emp_Salary",
						"type": "String"
					},
					{
						"name": "Emp_Manager",
						"type": "String"
					},
					{
						"name": "Dept_ID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_functional')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FunctionalOutput",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "String"
					},
					{
						"name": "Emp_Name",
						"type": "String"
					},
					{
						"name": "Emp_Salary",
						"type": "String"
					},
					{
						"name": "Emp_Manager",
						"type": "String"
					},
					{
						"name": "Dept_ID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_sql_table1",
					"type": "LinkedServiceReference",
					"parameters": {
						"databasename": {
							"value": "@dataset().databasename",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"databasename": {
						"type": "string"
					},
					"sourcetable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_Name",
						"type": "varchar"
					},
					{
						"name": "Emp_Dept",
						"type": "varchar"
					},
					{
						"name": "Emp_Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_Manager",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sourcetable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_sql_table1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_table2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lnk_sql_table2",
					"type": "LinkedServiceReference",
					"parameters": {
						"databasename": {
							"value": "@dataset().databasename",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"databasename": {
						"type": "string"
					},
					"destinationtable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_No",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_Name",
						"type": "varchar"
					},
					{
						"name": "Emp_Dept",
						"type": "varchar"
					},
					{
						"name": "Emp_Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_Manager",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().destinationtable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lnk_sql_table2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tester_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TesterOutput",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "String"
					},
					{
						"name": "Emp_Name",
						"type": "String"
					},
					{
						"name": "Emp_Salary",
						"type": "String"
					},
					{
						"name": "Emp_Manager",
						"type": "String"
					},
					{
						"name": "Dept_ID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_wrangling_file1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee_Details.xlsx",
						"container": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Emp_No",
						"type": "String"
					},
					{
						"name": "Emp_Name",
						"type": "String"
					},
					{
						"name": "Emp_Salary",
						"type": "String"
					},
					{
						"name": "Emp_Manager",
						"type": "String"
					},
					{
						"name": "Dept_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_wrangling_file2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Department.xlsx",
						"container": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Dept_ID ",
						"type": "String"
					},
					{
						"name": "Dept_Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parametrized_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parametrised Data Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_table1",
								"type": "DatasetReference",
								"parameters": {
									"databasename": {
										"value": "@pipeline().parameters.databasename",
										"type": "Expression"
									},
									"sourcetable": {
										"value": "@pipeline().parameters.sourcetablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_table2",
								"type": "DatasetReference",
								"parameters": {
									"databasename": {
										"value": "@pipeline().parameters.databasename",
										"type": "Expression"
									},
									"destinationtable": {
										"value": "@pipeline().parameters.destinationtablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcetablename": {
						"type": "string"
					},
					"destinationtablename": {
						"type": "string"
					},
					"databasename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-23T12:10:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_table1')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_table2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MappingDataFlow_Aggregation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_wrangling_file1",
								"type": "DatasetReference"
							},
							"name": "Employees"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_csv_output",
								"type": "DatasetReference"
							},
							"name": "AggregatedOutput"
						}
					],
					"transformations": [
						{
							"name": "EmployeesCount"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_No as string,",
						"          Emp_Name as string,",
						"          Emp_Salary as string,",
						"          Emp_Manager as string,",
						"          Dept_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employees",
						"Employees aggregate(groupBy(Dept_ID),",
						"     AggragatedCount = count(Emp_No)) ~> EmployeesCount",
						"EmployeesCount sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['AggregatedCount'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> AggregatedOutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_wrangling_file1')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MappingDataFlow_ConditionalSplit')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_wrangling_file1",
								"type": "DatasetReference"
							},
							"name": "Employee"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_csv_output",
								"type": "DatasetReference"
							},
							"name": "Empout"
						},
						{
							"dataset": {
								"referenceName": "ds_csv_output",
								"type": "DatasetReference"
							},
							"name": "TesterOutput"
						},
						{
							"dataset": {
								"referenceName": "ds_csv_output",
								"type": "DatasetReference"
							},
							"name": "FunctionalOutput"
						},
						{
							"dataset": {
								"referenceName": "ds_csv_output",
								"type": "DatasetReference"
							},
							"name": "NoDeptOutput"
						}
					],
					"transformations": [
						{
							"name": "Software"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_No as string,",
						"          Emp_Name as string,",
						"          Emp_Salary as string,",
						"          Emp_Manager as string,",
						"          Dept_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Employee",
						"Employee split(equals(Dept_ID,'100'),",
						"     equals(Dept_ID,'101'),",
						"     equals(Dept_ID,'102'),",
						"     disjoint: false) ~> Software@(softwareoutput, testeroutput, functionaloutput, nodepartment)",
						"Software@softwareoutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['softwareoutput'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Empout",
						"Software@testeroutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['TesterOutput'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> TesterOutput",
						"Software@functionaloutput sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['FunctionalOutput'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> FunctionalOutput",
						"Software@nodepartment sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['NoDeptOutput'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> NoDeptOutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_wrangling_file1')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_output')]"
			]
		}
	]
}